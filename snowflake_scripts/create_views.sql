

CREATE OR REPLACE VIEW MARITIME_REPORTING.VW_COMPLIANCE_TRENDS AS
SELECT
    SHIP_NAME,
    COMPLIANCE_TYPE,
    COUNT(*) AS SCORE_RECORDS,
    AVG(SCORE_VALUE) AS AVG_SCORE,
    SUM(CASE WHEN THRESHOLD_PASSED THEN 1 ELSE 0 END) AS PASS_COUNT,
    SUM(CASE WHEN NOT THRESHOLD_PASSED THEN 1 ELSE 0 END) AS FAIL_COUNT
FROM MARITIME_REPORTING.COMPLIANCE_SCORES
GROUP BY SHIP_NAME, COMPLIANCE_TYPE;


CREATE OR REPLACE VIEW MARITIME_REPORTING.VW_SHIP_VISITS AS
SELECT
    SHIP_NAME,
    COUNT(*) AS TOTAL_VISITS,
    COUNT_IF(VISIT_OUTCOME = 'Completed') AS COMPLETED_VISITS,
    COUNT_IF(VISIT_OUTCOME = 'Missed') AS MISSED_VISITS,
    COUNT_IF(VISIT_OUTCOME = 'Postponed') AS POSTPONED_VISITS,
    MIN(VISIT_DATE) AS FIRST_VISIT,
    MAX(VISIT_DATE) AS LAST_VISIT
FROM MARITIME_REPORTING.SHIP_VISIT_LOGS
GROUP BY SHIP_NAME;

CREATE OR REPLACE VIEW MARITIME_REPORTING.VW_TRAINING_COMPLIANCE AS
SELECT
    ROLE,
    TRAINING_TYPE,
    COUNT(*) AS TOTAL_TRAININGS,
    COUNT_IF(IS_MANDATORY) AS MANDATORY_TRAININGS,
    COUNT_IF(NOT IS_MANDATORY) AS OPTIONAL_TRAININGS,
    COUNT_IF(COMPLETION_DATE >= DATEADD(MONTH, -3, CURRENT_DATE())) AS RECENT_COMPLETIONS
FROM MARITIME_REPORTING.TRAINING_RECORDS
GROUP BY ROLE, TRAINING_TYPE;

-- Creating Materialised View

CREATE OR REPLACE MATERIALIZED VIEW MARITIME_REPORTING.mv_incident_summary AS
SELECT
  ship_name,
  severity_level,
  COUNT(*) AS total_incidents
FROM MARITIME_REPORTING.incident_master
GROUP BY ship_name, severity_level;

SHOW MATERIALIZED VIEWS;

